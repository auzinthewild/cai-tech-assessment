import{bg as a,bh as h,bi as E,cW as S,y as f,a$ as F,c6 as M,a3 as C,cQ as R,cd as q}from"./index-DGqPt3Sh.js";import{r as $}from"./BitmapContainer-IsC5f1MG.js";import{S as U,y as V}from"./LayerView-BudDYdCY.js";import{_ as W}from"./ExportStrategy-BinN1g5-.js";import{i as L}from"./RefreshableLayerView-7SC6lbNF.js";import{a as A}from"./ExportWMSImageParameters-CGOrpeuq.js";import{i as H}from"./timeSupport-8mESspTz.js";import"./WGLContainer-CmfkVdS6.js";import"./Utils-BfpGjSIo.js";import"./BoundingBox-uWwExSKL.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-tEGshxb0.js";import"./VertexArrayObject-9PSwqtji.js";import"./memoryEstimations-DNZZYa0W.js";import"./vec3f32-nZdmKIgz.js";import"./Container-D-OW-45n.js";import"./StyleDefinition-Dzwnqd5g.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-BKIFVv7M.js";import"./OptimizedFeature-Wdzvz_RS.js";import"./OptimizedGeometry-D1c4VXq1.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BitmapTechnique-DJHDKZtO.js";import"./GraphShaderModule-B8GIXRGP.js";import"./FramebufferObject-8ji-MKc7.js";import"./ShaderBuilder-BX9e9tCB.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-uMFRS8dR.js";import"./layerViewUtils-CpsnNMAH.js";const Q=r=>{let t=class extends r{initialize(){this.exportImageParameters=new A({layer:this.layer})}destroy(){this.exportImageParameters=S(this.exportImageParameters)}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var e;return H(this.layer,(e=this.view)==null?void 0:e.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(e,o){const{layer:s}=this;if(!e)throw new f("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:c}=s;if(!c)throw new f("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:c});const i=this.createFetchPopupFeaturesQuery(e);if(!i)return[];const{extent:p,width:n,height:m,x:d,y}=i;if(!(p&&n&&m))throw new f("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:p,width:n,height:m});const l=await s.fetchFeatureInfo(p,n,m,d,y);return F(o),l}};return a([h()],t.prototype,"exportImageParameters",void 0),a([h({readOnly:!0})],t.prototype,"exportImageVersion",null),a([h()],t.prototype,"layer",void 0),a([h({readOnly:!0})],t.prototype,"timeExtent",null),t=a([E("esri.views.layers.WMSLayerView")],t),t};let u=class extends Q(L(U(V))){constructor(){super(...arguments),this.bitmapContainer=new $}supportsSpatialReference(r){return this.layer.serviceSupportsSpatialReference(r)}update(r){this.strategy.update(r).catch(t=>{M(t)||C.getLogger(this).error(t)})}attach(){const{layer:r}=this,{imageMaxHeight:t,imageMaxWidth:e}=r;this.bitmapContainer=new $,this.container.addChild(this.bitmapContainer),this.strategy=new W({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:e,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=S(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(r){const{view:t,bitmapContainer:e}=this,{x:o,y:s}=r,{spatialReference:c}=t;let i,p=0,n=0;if(e.children.some(l=>{const{width:w,height:v,resolution:b,x:g,y:x}=l,I=g+b*w,P=x-b*v;return o>=g&&o<=I&&s<=x&&s>=P&&(i=new q({xmin:g,ymin:P,xmax:I,ymax:x,spatialReference:c}),p=w,n=v,!0)}),!i)return null;const m=i.width/p,d=Math.round((o-i.xmin)/m),y=Math.round((i.ymax-s)/m);return{extent:i,width:p,height:n,x:d,y}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(r,t,e,o){return this.layer.fetchImageBitmap(r,t,e,{timeExtent:this.timeExtent,...o})}};a([h()],u.prototype,"strategy",void 0),a([h()],u.prototype,"updating",void 0),u=a([E("esri.views.2d.layers.WMSLayerView2D")],u);const lt=u;export{lt as default};
